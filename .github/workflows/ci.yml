name: CI

on:
  push:
    branches: [main]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm run lint
      - run: npm run build
      - run: npm test --silent

  e2e-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sports_bet_test
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: sports_bet_test
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      NODE_ENV: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            sleep 2
          done
      - run: npm run test:e2e

  deploy:
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    if: ${{ needs.unit-tests.result == 'success' && needs.e2e-tests.result == 'success' }}
    steps:
      - name: Trigger Render Deploy
        run: curl -fsSL -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
